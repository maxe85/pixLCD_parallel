char tinyCharSet[] = {
// zero defines the end of a string
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 

// x01 aka Ä
B10110101,
B00000100,
B00001010,
B00001110,
B00001010,
B00010001,
B00010001,
// x02 aka Ö
B10110001,
B00000000,
B00001110,
B00010001,
B00010001,
B00010001,
B00001110,
// x03 aka Ü
B10001001,
B00000000,
B00001001,
B00001001,
B00001001,
B00001001,
B00000110,
// x04 aka ä
B10000101,
B00000000,
B00000110,
B00000001,
B00000111,
B00001001,
B00000111,
// x05 aka ö
B10001001,
B00000000,
B00000110,
B00001001,
B00001001,
B00001001,
B00000110,
// x06 aka ü  
B01100101,
B00000000,
B00000101,
B00000101,
B00000101,
B00000101,
B00000011,
// x07 aka  ligature ß
B10000010,
B00000101,
B00001001,
B00001110,
B00001001,
B00001001,
B00001010,
// 0x08 aka Æ
B10101111,
B00010100,
B00010100,
B00011111,
B00010100,
B00010100,
B00010111,
// 0x09 aka tab
0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
// 0x0A aka new line
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
// 0x0B aka Ø
B10101101,
B00010010,
B00010101,
B00010101,
B00010101,
B00001001,
B00010110,
// 0x0C aka Å 
B10100100,
B00001010,
B00000100,
B00001010,
B00001110,
B00010001,
B00010001,
// 0x0D aka æ
B10100000,
B00000000,
B00011010,
B00000101,
B00001110,
B00010100,
B00001011,
// 0x0E aka ø
B10100000,
B00000000,
B00001110,
B00010011,
B00010101,
B00011001,
B00001110,
// 0x0F aka å
B10000010,
B00000101,
B00000010,
B00000001,
B00000111,
B00001001,
B00000111,
// x010 aka triangel right
B01100000,
B00000100,
B00000110,
B00000111,
B00000110,
B00000100,
B00000000,
// x011 aka triangel left
B01100000,
B00000001,
B00000011,
B00000111,
B00000011,
B00000001,
B00000000,
// x012 aka arrow up and down
B10100100,
B00001110,
B00011111,
B00000100,
B00011111,
B00001110,
B00000100,
// x013 aka double excalmation
B01100101,
B00000101,
B00000101,
B00000101,
B00000101,
B00000000,
B00000101,
// x014 aka pilcrow
B10101111,
B00010101,
B00001101,
B00000101,
B00000101,
B00000101,
B00000101,
// x015 aka section sign
B10101110,
B00010001,
B00001100,
B00001010,
B00000110,
B00010001,
B00001110,
// x016 aka fat underline
B01100000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000111,
B00000111,
// x017 aka arrow up with baseline
B10101000,
B00011100,
B00101010,
B00001000,
B00001000,
B00001000,
B00111110,
// x018 aka arrow up
B10100000,
B00000100,
B00001110,
B00010101,
B00000100,
B00000100,
B00000000,
// x019 aka arrow down
B10100000,
B00000100,
B00000100,
B00010101,
B00001110,
B00000100,
B00000000,
// x01A aka arrow right
B10100000,
B00001000,
B00000100,
B00111110,
B00000100,
B00001000,
B00000000,
// x01B aka arrow left
B10100000,
B00000100,
B00001000,
B00011111,
B00001000,
B00000100,
B00000000,
// x01C aka ???
B10000000,
B00000000,
B00001000,
B00001111,
B00000000,
B00000000,
B00000000,
// x01D aka spanish question mark
B10000100,
B00000000,
B00000100,
B00000010,
B00000001,
B00001001,
B00000110,
// x01E aka triangel up
B10100000,
B00000100,
B00001110,
B00011111,
B00000000,
B00000000,
B00000000,
// x01F aka triangel down
B10100000,
B00000000,
B00000000,
B00011111,
B00001110,
B00000100,
B00000000,
// x020 aka whitespace
0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
// x021 aka !
B00100001,
B00000001,
B00000001,
B00000001,
B00000001,
B00000000,
B00000001,
// x022 aka "
B01100101,
B00000101,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
// x023 aka #
B10100000,
B00001010,
B00011111,
B00001010,
B00011111,
B00001010,
B00000000,
// x024 aka $
B10100100,
B00001111,
B00010000,
B00001110,
B00000001,
B00011110,
B00000100,
// x025 aka %
B10101001,
B00010101,
B00001010,
B00000100,
B00001010,
B00010101,
B00010010,
// x026 aka &
B10100100,
B00001010,
B00000100,
B00001000,
B00010100,
B00010010,
B00001101,
// x027 aka '
B00100001,
B00000001,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
// x028 aka (
B01000001,
B00000010,
B00000010,
B00000010,
B00000010,
B00000010,
B00000001,
// x029 aka )
B01000010,
B00000001,
B00000001,
B00000001,
B00000001,
B00000001,
B00000010,
// x02A aka *
B01100101,
B00000010,
B00000101,
B00000000,
B00000000,
B00000000,
B00000000,
// x02B aka +
B10100000,
B00000000,
B00000100,
B00001110,
B00000100,
B00000000,
B00000000,
// x02C aka ,
B01000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000001,
B00000010,
// x02D aka -
B10100000,
B00000000,
B00000000,
B00001110,
B00000000,
B00000000,
B00000000,
// x02E aka .
B00100000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000001,
// x02F aka /
B01100001,
B00000001,
B00000010,
B00000010,
B00000010,
B00000100,
B00000100,
// x030 aka 0
B10000110,
B00001001,
B00001011,
B00001101,
B00001001,
B00001001,
B00000110,
// x031 aka 1
B10000010,
B00000110,
B00000010,
B00000010,
B00000010,
B00000010,
B00000010,
// x032 aka 2
B10000110,
B00001001,
B00000001,
B00000010,
B00000100,
B00001000,
B00001111,
// x033 aka 3
B10000110,
B00001001,
B00000001,
B00000110,
B00000001,
B00001001,
B00000110,
// x034 aka 4
B10000010,
B00000110,
B00001010,
B00001111,
B00000010,
B00000010,
B00000010,
// x035 aka 5
B10001111,
B00001000,
B00001000,
B00000110,
B00000001,
B00001001,
B00000110,
// x036 aka 6
B10000110,
B00001001,
B00001000,
B00001110,
B00001001,
B00001001,
B00000110,
// x037 aka 7
B10001111,
B00000001,
B00000001,
B00000010,
B00000010,
B00000100,
B00000100,
// x038 aka 8
B10000110,
B00001001,
B00001001,
B00000110,
B00001001,
B00001001,
B00000110,
// x039 aka 9
B10000110,
B00001001,
B00001001,
B00000111,
B00000001,
B00001001,
B00000110,
// x03A aka :
B00100000,
B00000000,
B00000001,
B00000000,
B00000000,
B00000001,
B00000000,
// x03B aka ;
B01000000,
B00000000,
B00000001,
B00000000,
B00000000,
B00000001,
B00000010,
// x03C aka <
B10000001,
B00000010,
B00000100,
B00001000,
B00000100,
B00000010,
B00000001,
// x03D aka =
B01100000,
B00000000,
B00000111,
B00000000,
B00000111,
B00000000,
B00000000,
// x03E aka >
B10001000,
B00000100,
B00000010,
B00000001,
B00000010,
B00000100,
B00001000,
// x03F aka ?
B10000110,
B00001001,
B00000001,
B00000010,
B00000100,
B00000000,
B00000100,
// x040 aka @
B10101110,
B00010001,
B00010001,
B00010111,
B00010111,
B00010000,
B00001111,
// x041 aka A
B10100100,
B00000100,
B00001010,
B00001010,
B00001110,
B00010001,
B00010001,
// x042 aka B
B10001110,
B00001001,
B00001001,
B00001110,
B00001001,
B00001001,
B00001110,
// x043 aka C
B10000110,
B00001001,
B00001000,
B00001000,
B00001000,
B00001001,
B00000110,
// x044 aka D
B10001110,
B00001001,
B00001001,
B00001001,
B00001001,
B00001001,
B00001110,
// x045 aka E
B01100111,
B00000100,
B00000100,
B00000111,
B00000100,
B00000100,
B00000111,
// x046 aka F
B01100111,
B00000100,
B00000100,
B00000111,
B00000100,
B00000100,
B00000100,
// x047 aka G
B10000110,
B00001001,
B00001000,
B00001011,
B00001001,
B00001001,
B00000110,
// x048 aka H
B10001001,
B00001001,
B00001001,
B00001111,
B00001001,
B00001001,
B00001001,
// x049 aka I
B00100001,
B00000001,
B00000001,
B00000001,
B00000001,
B00000001,
B00000001,
// x04A aka J
B01100111,
B00000001,
B00000001,
B00000001,
B00000001,
B00000101,
B00000010,
// x04B aka K
B10001001,
B00001001,
B00001010,
B00001100,
B00001010,
B00001001,
B00001001,
// x04C aka L
B01100100,
B00000100,
B00000100,
B00000100,
B00000100,
B00000100,
B00000111,
// x04D aka M
B10110001,
B00011011,
B10010101,
B10010101,
B00010001,
B00010001,
B00010001,
// x04E aka N
B10110001,
B00011001,
B00011101,
B00010101,
B00010111,
B00010011,
B00010001,
// x04F aka O
B10101110,
B00010001,
B00010001,
B00010001,
B00010001,
B00010001,
B00001110,
// x050 aka P
B10001110,
B00001001,
B00001001,
B00001110,
B00001000,
B00001000,
B00001000,
// x051 aka Q
B10000110,
B00001001,
B00001001,
B00001001,
B00001001,
B00001010,
B00000101,
// x052 aka R
B10001110,
B00001001,
B00001001,
B00001110,
B00001100,
B00001010,
B00001001,
// x053 aka S
B10000110,
B00001001,
B00001000,
B00000110,
B00000001,
B00001001,
B00000110,
// x054 aka T
B01100111,
B00000010,
B00000010,
B00000010,
B00000010,
B00000010,
B00000010,
// x055 aka U
B10001001,
B00001001,
B00001001,
B00001001,
B00001001,
B00001001,
B00000110,
// x056 aka V
B10001001,
B00001001,
B00001010,
B00001010,
B00001010,
B00000100,
B00000100,
// x057 aka W
B10110001,
B00010001,
B00010101,
B00010101,
B00001010,
B00001010,
B00001010,
// x058 aka X
B10110001,
B00010001,
B00001010,
B00000100,
B00001010,
B00010001,
B00010001,
// x059 aka Y
B10110001,
B00001010,
B00001010,
B00000100,
B00000100,
B00000100,
B00000100,
// x05A aka Z
B10111111,
B00000001,
B00000010,
B00000100,
B00001000,
B00010000,
B00011111,
// x05B aka [
B01000011,
B00000010,
B00000010,
B00000010,
B00000010,
B00000010,
B00000011,
// x05C aka  \    *
B01100100,
B00000100,
B00000010,
B00000010,
B00000010,
B00000001,
B00000001,
// x05D aka ]
B01000011,
B00000001,
B00000001,
B00000001,
B00000001,
B00000001,
B00000011,
// x05E aka ^
B10100100,
B00001010,
B00010001,
B00000000,
B00000000,
B00000000,
B00000000,
// x05F aka _
B10000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
B00001111,
// x060 aka `
B01000010,
B00000001,
B00000000,
B00000000,
B00000000,
B00000000,
B00000000,
// x061 aka a
B10000000,
B00000000,
B00000110,
B00000001,
B00000111,
B00001001,
B00000111,
// x062 aka b
B10001000,
B00001000,
B00001110,
B00001001,
B00001001,
B00001001,
B00000110,
// x063 aka c
B01100000,
B00000000,
B00000011,
B00000100,
B00000100,
B00000100,
B00000011,
// x064 aka d
B10000001,
B00000001,
B00000111,
B00001001,
B00001001,
B00001001,
B00000110,
// x065 aka e
B10000000,
B00000000,
B00000110,
B00001001,
B00001111,
B00001000,
B00000110,
// x066 aka f
B01100001,
B00000010,
B00000111,
B00000010,
B00000010,
B00000010,
B00000010,
// x067 aka g
B10000000,
B00000000,
B00000111,
B00001001,
B00000111,
B00000001,
B00000110,
// x068 aka h
B10001000,
B00001000,
B00001110,
B00001001,
B00001001,
B00001001,
B00001001,
// x069 aka i
B00100001,
B00000000,
B00000001,
B00000001,
B00000001,
B00000001,
B00000001,
// x06A aka j
B01000001,
B00000000,
B00000001,
B00000001,
B00000001,
B00000001,
B00000010,
// x06B aka k
B01100100,
B00000101,
B00000101,
B00000110,
B00000101,
B00000101,
B00000101,
// x06C aka l
B01000010,
B00000010,
B00000010,
B00000010,
B00000010,
B00000010,
B00000001,
// x06D aka m
B10100000,
B00000000,
B00011010,
B00010101,
B00010101,
B00010101,
B00010101,
// x06E aka n
B10000000,
B00000000,
B00001110,
B00001001,
B00001001,
B00001001,
B00001001,
// x06F aka o
B10000000,
B00000000,
B00000110,
B00001001,
B00001001,
B00001001,
B00000110,
// x070 aka p
B01100000,
B00000000,
B00000111,
B00000101,
B00000110,
B00000100,
B00000100,
// x071 aka q
B10000000,
B00000000,
B00000110,
B00001001,
B00001001,
B00001010,
B00000101,
// x072 aka r
B01100000,
B00000000,
B00000101,
B00000110,
B00000100,
B00000100,
B00000100,
// x073 aka s
B01100000,
B00000000,
B00000011,
B00000100,
B00000010,
B00000001,
B00000110,
// x074 aka t
B01100010,
B00000010,
B00000111,
B00000010,
B00000010,
B00000010,
B00000011,
// x075 aka u
B10000000,
B00000000,
B00001001,
B00001001,
B00001001,
B00001001,
B00000111,
// x076 aka v
B01100000,
B00000000,
B00000101,
B00000101,
B00000101,
B00000101,
B00000010,
// x077 aka w
B10100000,
B00000000,
B00010001,
B00010001,
B00010101,
B00010101,
B00001010,
// x078 aka x
B01100000,
B00000000,
B00000101,
B00000101,
B00000010,
B00000101,
B00000101,
// x079 aka y
B10000000,
B00000000,
B00001001,
B00000101,
B00000010,
B00000100,
B00000100,
// x07A aka z
B01100000,
B00000000,
B00000111,
B00000001,
B00000010,
B00000100,
B00000111,
// x07B aka {
B01100001,
B00000010,
B00000010,
B00000100,
B00000010,
B00000010,
B00000001,
// x07C aka |
B00100001,
B00000001,
B00000001,
B00000001,
B00000001,
B00000001,
B00000001,
// x07D aka }
B01100100,
B00000010,
B00000010,
B00000001,
B00000010,
B00000010,
B00000100,
// x07E aka ~
B10101000,
B00010101,
B00000010,
B00000000,
B00000000,
B00000000,
B00000000,
// x07F aka house
B10100000,
B00000000,
B00000100,
B00001010,
B00010001,
B00010001,
B00011111
};

